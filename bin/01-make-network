echo "FUTURE: dfx start --clean --with-nns"
echo "PLACEHOLDER: Use '$DFX_NETWORK' testnet with an nns set up"


set -euo pipefail

test -f canister_ids.json || echo '{}' > canister_ids.json

echo "Checking that we have a network..."
while test -z "${DFX_NETWORK:-}"; do
	read -rp "Which network would you like to use?  " DFX_NETWORK
done
export DFX_NETWORK


echo "Checking that we have an nns-dapp dir..."
while true ; do
test -e "${ND_DIR:-}/dfx.json" && break || {
  read -rp "Where is the nns-repo?  " ND_DIR
}
done


echo "Checking that we have network config"
jq -e '.networks[env.DFX_NETWORK]' dfx.json || {
  jq -s '.[0] * .[1]' dfx.json <( cd "$ND_DIR" ; jq '{networks: .networks}' dfx.json ) > dfx.json.new && mv dfx.json.new dfx.json
}

echo "Adding the sns-wasm and did files to dfx.json"
/home/max/dfn/ic-gitlab/rs/sns/cli/import-dfx /home/max/dfn/ic-gitlab/rs/sns/cli
/home/max/dfn/ic-gitlab/rs/sns/cli/import-dfx /home/max/dfn/ic-gitlab/rs/nns
echo "Checking that we have an SNS..."
while test -z "${SNS_WASM:-}"; do
  # Check whether it is set locally...
  SNS_WASM="$(jq -r '.["sns-wasm"][env.DFX_NETWORK]' canister_ids.json)"
  [[ "${SNS_WASM:-}" != "null" ]] || unset SNS_WASM
  test -z "${SNS_WASM:-}" || break
  # Look in ND_DIR
  jq -s '.[1] * .[0]' <(jq -r '{"sns-wasm":{(env.DFX_NETWORK): .wasm_canister[env.DFX_NETWORK]}}' $ND_DIR/canister_ids.json) canister_ids.json > canister_ids.new
  mv canister_ids.new canister_ids.json
  SNS_WASM="$(jq -r '.["sns-wasm"][env.DFX_NETWORK]' canister_ids.json)"
  [[ "${SNS_WASM:-}" != "null" ]] || unset SNS_WASM
  test -z "${SNS_WASM:-}" || break

  echo
  echo "Please populate canister_ids.json with the sns-wasm ID."
  read -rp "Press enter to continue... "
  echo
done

echo "Current list of SNSs:"
dfx canister --network $DFX_NETWORK call sns-wasm list_deployed_snses '(record {} )'
read -rp "Press enter to continue... "

echo "See SNS's in the frontend dapp:"
(
  cd "$ND_DIR"
  export DAPP_NAME=nns-dapp
  url="$(jq -r '.networks[env.DFX_NETWORK].config.HOST' dfx.json | awk -F '://' -v canister_id="$(jq -r .[env.DAPP_NAME][env.DFX_NETWORK] canister_ids.json)" '{print $1 FS canister_id "." $2}')"
  echo "See: ${url}/#/launchpad"
  read -rp "Press enter to continue... "
)

echo "Install quill"
command -v sns-quill ||
(
    git clone git@github.com:dfinity/sns-quill.git
    cd sns-quill
    make release
    install /home/max/dfn/snsdemo/sns-quill/target/release/sns-quill "$HOME/.local/bin/"
)

echo "Set the sns-quill network URL..."
export IC_URL="$(jq -r '.networks[env.DFX_NETWORK].providers[0]' dfx.json)"

clear
read -rp "Ready to start the demo.  Pless enter to proceed... "
clear

echo "First, the smiley-face team needs to decide on parameters for the decentralisation."
echo "We will use a pre-populated configuration..."
: TODO - create a configuration
: TODO - prompt the user for key details
read -rp "Press enter to have a look... "
$EDITOR sns_init.yml
echo

echo "Next, the smiley-face team needs to create a governance system (SNS) that implements those decisions."
SNS_WASM_CANISTER_ID="$(dfx canister --network "$DFX_NETWORK" id sns-wasm 2>/dev/null)"
read -rp "Press enter to continue... "
  echo "Creating SNS"
  set -- --init-config-file sns_init.yml
  echo sns "${@}"
  : We actually run with some flags to point at the testnet.
  sns deploy --network "$DFX_NETWORK" --override-sns-wasm-canister-id-for-tests "${SNS_WASM_CANISTER_ID}" "${@}" |
    tee /dev/stderr >sns_creation.idl

  echo "Populate canister_ids.json"
  if test -e canister_ids.json; then
    EXISTING_CANISTER_IDS="canister_ids.$(date -Iseconds)"
    cp canister_ids.json "$EXISTING_CANISTER_IDS"
  else
    echo "{}" >canister_ids.json
  fi
  sed -n ':a;/^[(]/bb;d;ba;:b;p;n;bb' <sns_creation.idl |
    idl2json |
    jq '.canisters[] | to_entries | map({ ("sns_"+.key): {(env.DFX_NETWORK): (.value[0])} }) | add' |
    jq -s '.[0] * .[1]' - canister_ids.json >canister_ids.json.new
  mv canister_ids.json.new canister_ids.json
echo


echo "The SNS should be listed:"
dfx canister --network $DFX_NETWORK call sns-wasm list_deployed_snses '(record {} )'
read -rp "Press enter to continue... "
echo

echo "The neurons from the configuration file are listed:"
set dfx canister --network $DFX_NETWORK call sns_governance list_neurons '(record { of_principal=null; limit=100: nat32; start_page_at=null  } )'
echo "${@}"
"${@}"
read -rp "Press enter to continue... "
echo

echo "If we examine the SNS we see management canisters but no dapps:"
dfx canister --network $DFX_NETWORK call sns_root list_sns_canisters '(record {} )'
read -rp "Press enter to continue... "
echo
