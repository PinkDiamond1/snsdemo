diff --git a/README.md b/README.md
index e4b1afc..4a93cfa 100644
--- a/README.md
+++ b/README.md
@@ -5,8 +5,9 @@ Welcome to the world of the Network Nervous System.  In this tutorial we will sh
 ## Setup
 Clone this project:
 ```bash
-git clone https://github.com/dfinity/snsdemo.git
-cd snsdemo
+dfx stop
+pkill dfx || true
+pkill icx-proxy || true
 ```
 
 ## Project contents
@@ -15,6 +16,7 @@ Before we get started, let's have a quick look at this repo.  It contains a simp
 ```bash
 npm ci
 dfx start --background
+sleep 1
 dfx deploy
 echo http://$(dfx canister id smiley_dapp_assets).localhost:8080
 ```
@@ -27,12 +29,14 @@ After this tutorial is complete we hope that you will experiment using the same
 ## Install dfx
 This dfx functionality has not been released yet, so you will need a special build, which you can obtain as follows:
 ```bash
+test -d sdk || {
 git clone https://github.com/dfinity/sdk.git
 pushd sdk
 command -v cargo || echo "Please install rust before proceeding: https://www.rust-lang.org/tools/install"
 cargo build
 cp target/debug/dfx "../bin/"
 popd
+}
 ```
 Also, to use the non-production build, it is important to remove the `dfx` version from `dfx.json`, otherwise your calls to dfx will simply be redirected to a normal production build and new functionality will not work.  You can do this with:
 ```
@@ -49,6 +53,7 @@ Now we should now be able to see the help pages for the NNS commands:
 ## Start a local testnet
 Make sure that your `$HOME/.config/dfx/networks.json` has the following configuration for the "local" network:
 ```bash
+cat <<EOF>"$HOME/.config/dfx/networks.json"
 {
   "local": {
     "bind": "127.0.0.1:8080",
@@ -58,6 +63,7 @@ Make sure that your `$HOME/.config/dfx/networks.json` has the following configur
     }
   }
 }
+EOF
 ```
 Note:
 * The "old" method of configuring networks is in `dfx.json`.  The old method is deprecated but still works and
@@ -79,7 +85,9 @@ Note:
 Now you can start your local testnet:
 ```bash
 ./bin/dfx stop
+sleep 1
 ./bin/dfx start --clean --background
+sleep 1
 ```
 You should see something like this:
 
