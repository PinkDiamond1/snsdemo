set -euo pipefail

test -f canister_ids.json || echo '{}' > canister_ids.json

echo "Checking that we have a network..."
while test -z "${DFX_NETWORK:-}"; do
	read -rp "Which network would you like to use?  " DFX_NETWORK
done
export DFX_NETWORK


echo "Checking that we have an nns-dapp dir..."
while true ; do
test -e "${ND_DIR:-}/dfx.json" && break || {
  read -rp "Where is the nns-repo?  " ND_DIR
}
done


echo "Checking that we have network config"
jq -e '.networks[env.DFX_NETWORK]' dfx.json || {
  jq -s '.[0] * .[1]' dfx.json <( cd "$ND_DIR" ; jq '{networks: .networks}' dfx.json ) > dfx.json.new && mv dfx.json.new dfx.json
}

echo "Deploying dapp"
dfx canister --network "$DFX_NETWORK" call smiley_dapp getBackgroundColor '()' || {
  npm ci
  dfx deploy --network $DFX_NETWORK --with-cycles 1000000000000 smiley_dapp 
  dfx deploy --network $DFX_NETWORK --with-cycles 1000000000000 smiley_dapp_assets
}

echo "Getting dapp info..."
export DAPP_NAME=smiley_dapp_assets
echo "See: $(jq -r '.networks[env.DFX_NETWORK].config.HOST' dfx.json | awk -F '://' -v canister_id="$(jq -r .[env.DAPP_NAME][env.DFX_NETWORK] canister_ids.json)" '{print $1 FS canister_id "." $2}')"
read -rp "Press enter to continue... "
DAPP_FRONTEND="$(jq -r .smiley_dapp_assets[env.DFX_NETWORK] canister_ids.json)"
DAPP_BACKEND="$(jq -r .smiley_dapp[env.DFX_NETWORK] canister_ids.json)"
export DAPP_FRONTEND
export DAPP_BACKEND

echo "Querying the canister:"
set dfx canister --network "$DFX_NETWORK" call smiley_dapp getBackgroundColor '()'
echo "  ${*}"
"${@}"
read -rp "Press enter to continue... "
